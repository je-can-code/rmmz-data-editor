name: Build & Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # step 1: setup the dotnet stuff
  setup:
    strategy:
      matrix:
        target-platform: [x64]
    runs-on: windows-latest
    
    env:
      APP_PROJECT_PATH: src\Dashboard\Dashboard.csproj
      TEST_PROJECT_PATH: test\Dashboard\Dashboard.Tests.csproj
      ARTIFACT_PATH: out\
      SOLUTION_PATH: J-EmZee.sln
      
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

#      - name: Setup msbuild
#        uses: microsoft/setup-msbuild@v1.1
        
      - name: Build app
        run: dotnet build $env:SOLUTION_PATH

      - name: Run tests
        run: dotnet test $env:TEST_PROJECT_PATH
        
      - name: Publish artifacts
        run: dotnet publish $env:SOLUTION_PATH -c Release -o $env:ARTIFACT_PATH

# step 2: publish the content
  publish:
    if: true == false
    needs:
      - setup
    runs-on: ubuntu-latest
    
    env:
      OUTPUT: ${{ needs.setup.outputs.OUTPUT_FOLDER }}
    
    steps:
      - run: echo "$OUTPUT"

      - name: Build w/ dotnet
        run: dotnet build -c Release -o ${{ env.OUTPUT }}

      - name: Publish w/ dotnet
        run: dotnet publish -c Release -o ${{ env.OUTPUT }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: 'test-tag-name'
          release_name: 'test-release-name'
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1.0.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.OUTPUT }}
          asset_name: '*.*'
          asset_content_type: application/zip

      - name: Publish Release
        uses: eregon/publish-release@v1
        with:
          release_id: ${{ steps.create_release.outputs.id }}
